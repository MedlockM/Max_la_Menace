{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"draw/","text":"find_all_paths Function \u00b6 This function is used to find all paths from the start station to the end station in a given graph with a maximum number of hops. Parameters \u00b6 G (Graph): The graph representing the train network. start_station (str): The name of the start station. end_station (str): The name of the end station. max_hops (int): The maximum number of hops allowed in the path. Returns \u00b6 all_paths (list): A list of all paths from the start station to the end station. Note: The function assumes that the graph G is already created and contains the necessary information about the train network.","title":"Draw"},{"location":"draw/#find_all_paths-function","text":"This function is used to find all paths from the start station to the end station in a given graph with a maximum number of hops.","title":"find_all_paths Function"},{"location":"draw/#parameters","text":"G (Graph): The graph representing the train network. start_station (str): The name of the start station. end_station (str): The name of the end station. max_hops (int): The maximum number of hops allowed in the path.","title":"Parameters"},{"location":"draw/#returns","text":"all_paths (list): A list of all paths from the start station to the end station. Note: The function assumes that the graph G is already created and contains the necessary information about the train network.","title":"Returns"},{"location":"main/","text":"find_all_paths Function \u00b6 This function is used to find all paths from the start station to the end station in a given graph with a maximum number of hops. Parameters \u00b6 G (Graph): The graph representing the train network. start_station (str): The name of the start station. end_station (str): The name of the end station. max_hops (int): The maximum number of hops allowed in the path. Returns \u00b6 all_paths (list): A list of all paths from the start station to the end station. Note: The function assumes that the graph G is already created and contains the necessary information about the train network. index Function \u00b6 This function is responsible for rendering the index.html template with a sorted list of stations. search Function \u00b6 This function is triggered when the user submits the search form. It retrieves the user inputs, downloads a CSV file from an API URL, builds a dataframe, filters the dataframe based on defined criteria, creates a multi-graph representation of the train network using NetworkX, and calls the find_all_paths() function to find all paths from the start","title":"Main"},{"location":"main/#find_all_paths-function","text":"This function is used to find all paths from the start station to the end station in a given graph with a maximum number of hops.","title":"find_all_paths Function"},{"location":"main/#parameters","text":"G (Graph): The graph representing the train network. start_station (str): The name of the start station. end_station (str): The name of the end station. max_hops (int): The maximum number of hops allowed in the path.","title":"Parameters"},{"location":"main/#returns","text":"all_paths (list): A list of all paths from the start station to the end station. Note: The function assumes that the graph G is already created and contains the necessary information about the train network.","title":"Returns"},{"location":"main/#index-function","text":"This function is responsible for rendering the index.html template with a sorted list of stations.","title":"index Function"},{"location":"main/#search-function","text":"This function is triggered when the user submits the search form. It retrieves the user inputs, downloads a CSV file from an API URL, builds a dataframe, filters the dataframe based on defined criteria, creates a multi-graph representation of the train network using NetworkX, and calls the find_all_paths() function to find all paths from the start","title":"search Function"}]}