{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"draw/","text":"find_all_paths Function \u00b6 This function is used to find all paths from the start station to the end station in a given graph with a maximum number of hops. Parameters G (Graph): The graph representing the train network. start_station (str): The name of the start station. end_station (str): The name of the end station. max_hops (int): The maximum number of hops allowed in the path. Returns all_paths (list): A list of all paths from the start station to the end station. Note: The function assumes that the graph G is already created and contains the necessary information about the train network. main Script \u00b6 The main script performs the following steps to download a CSV file, process the data, create a graph, and find all paths between two stations: Download the CSV file from the specified URL and save it as \"tgvmax-auto.csv\". Load the downloaded CSV file into a pandas DataFrame. Filter the DataFrame based on user input for the 'od_happy_card' column and the specified date. Drop unnecessary columns from the DataFrame. Create an empty multigraph to represent the train network. Get a set of all unique station names. Add each station as a node in the graph. Iterate through each row of the DataFrame and create edges in the graph based on the origin, destination, train number, departure time, and arrival time. Call the find_all_paths function to find all paths from the start station to the end station with the specified maximum number of hops. Example usage \u00b6 The example usage section demonstrates how to use the find_all_paths function to find all paths from the \"MARSEILLE ST CHARLES\" station to the \"LYON (intramuros)\" station with a maximum of 6 hops. The result is printed as a list of paths. If no paths are found, a message indicating that no paths were found is printed.","title":"Draw"},{"location":"draw/#find_all_paths-function","text":"This function is used to find all paths from the start station to the end station in a given graph with a maximum number of hops. Parameters G (Graph): The graph representing the train network. start_station (str): The name of the start station. end_station (str): The name of the end station. max_hops (int): The maximum number of hops allowed in the path. Returns all_paths (list): A list of all paths from the start station to the end station. Note: The function assumes that the graph G is already created and contains the necessary information about the train network.","title":"find_all_paths Function"},{"location":"draw/#main-script","text":"The main script performs the following steps to download a CSV file, process the data, create a graph, and find all paths between two stations: Download the CSV file from the specified URL and save it as \"tgvmax-auto.csv\". Load the downloaded CSV file into a pandas DataFrame. Filter the DataFrame based on user input for the 'od_happy_card' column and the specified date. Drop unnecessary columns from the DataFrame. Create an empty multigraph to represent the train network. Get a set of all unique station names. Add each station as a node in the graph. Iterate through each row of the DataFrame and create edges in the graph based on the origin, destination, train number, departure time, and arrival time. Call the find_all_paths function to find all paths from the start station to the end station with the specified maximum number of hops.","title":"main Script"},{"location":"draw/#example-usage","text":"The example usage section demonstrates how to use the find_all_paths function to find all paths from the \"MARSEILLE ST CHARLES\" station to the \"LYON (intramuros)\" station with a maximum of 6 hops. The result is printed as a list of paths. If no paths are found, a message indicating that no paths were found is printed.","title":"Example usage"},{"location":"main/","text":"find_all_paths Function \u00b6 This function is used to find all paths from the start station to the end station in a given graph with a maximum number of hops. Parameters \u00b6 G (Graph): The graph representing the train network. start_station (str): The name of the start station. end_station (str): The name of the end station. max_hops (int): The maximum number of hops allowed in the path. Returns \u00b6 all_paths (list): A list of all paths from the start station to the end station. Note: The function assumes that the graph G is already created and contains the necessary information about the train network. index Function \u00b6 This function is the main route of the Flask application. It renders the index.html template and passes a sorted list of stations to the template. Returns \u00b6 HTML template rendered with stations data. search Function \u00b6 This function is the route for the search form submission. It retrieves the user inputs, downloads a CSV file from an API, filters the data based on user inputs and desired criteria, creates a graph, and calls the find_all_paths function. Finally, it renders the search.html template with","title":"Main"},{"location":"main/#find_all_paths-function","text":"This function is used to find all paths from the start station to the end station in a given graph with a maximum number of hops.","title":"find_all_paths Function"},{"location":"main/#parameters","text":"G (Graph): The graph representing the train network. start_station (str): The name of the start station. end_station (str): The name of the end station. max_hops (int): The maximum number of hops allowed in the path.","title":"Parameters"},{"location":"main/#returns","text":"all_paths (list): A list of all paths from the start station to the end station. Note: The function assumes that the graph G is already created and contains the necessary information about the train network.","title":"Returns"},{"location":"main/#index-function","text":"This function is the main route of the Flask application. It renders the index.html template and passes a sorted list of stations to the template.","title":"index Function"},{"location":"main/#returns_1","text":"HTML template rendered with stations data.","title":"Returns"},{"location":"main/#search-function","text":"This function is the route for the search form submission. It retrieves the user inputs, downloads a CSV file from an API, filters the data based on user inputs and desired criteria, creates a graph, and calls the find_all_paths function. Finally, it renders the search.html template with","title":"search Function"}]}