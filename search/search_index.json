{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"draw/","text":"find_all_paths Function \u00b6 This function is used to find all paths from the start station to the end station in a given graph with a maximum number of hops. Parameters \u00b6 G (Graph): The graph representing the train network. start_station (str): The name of the start station. end_station (str): The name of the end station. max_hops (int): The maximum number of hops allowed in the path. Returns \u00b6 all_paths (list): A list of all paths from the start station to the end station. Example Usage \u00b6 start_station = \"MARSEILLE ST CHARLES\" end_station = \"LYON (intramuros)\" max_hops = 6 paths = find_all_paths(G, start_station, end_station, max_hops) if paths: for path in paths: print(f\"Path: {path}\") else: print(\"No paths found\") Note: The function assumes that the graph G is already created and contains the necessary information about the train network.","title":"Draw"},{"location":"draw/#find_all_paths-function","text":"This function is used to find all paths from the start station to the end station in a given graph with a maximum number of hops.","title":"find_all_paths Function"},{"location":"draw/#parameters","text":"G (Graph): The graph representing the train network. start_station (str): The name of the start station. end_station (str): The name of the end station. max_hops (int): The maximum number of hops allowed in the path.","title":"Parameters"},{"location":"draw/#returns","text":"all_paths (list): A list of all paths from the start station to the end station.","title":"Returns"},{"location":"draw/#example-usage","text":"start_station = \"MARSEILLE ST CHARLES\" end_station = \"LYON (intramuros)\" max_hops = 6 paths = find_all_paths(G, start_station, end_station, max_hops) if paths: for path in paths: print(f\"Path: {path}\") else: print(\"No paths found\") Note: The function assumes that the graph G is already created and contains the necessary information about the train network.","title":"Example Usage"},{"location":"main/","text":"find_all_paths(G, start_station, end_station, max_hops) \u00b6 This function finds all possible paths between a start station and an end station in a given graph, considering a maximum number of hops. Parameters: G (networkx.MultiDiGraph): The graph representing the train network. start_station (str): The name of the start station. end_station (str): The name of the end station. max_hops (int): The maximum number of hops allowed in the path. Returns: all_paths (list): A list of all possible paths between the start and end stations. Exceptions/Errors: None. index() \u00b6 This function renders the index.html template, displaying a form for selecting the start and end stations. Parameters: None. Returns: render_template (flask.render_template): The rendered HTML template. Exceptions/Errors: None. search() \u00b6 This function handles the form submission and performs the train search based on the user inputs. Parameters: None. Returns: render_template (flask.render_template): The rendered HTML template. Exceptions/Errors: None.","title":"Main"},{"location":"main/#find_all_pathsg-start_station-end_station-max_hops","text":"This function finds all possible paths between a start station and an end station in a given graph, considering a maximum number of hops. Parameters: G (networkx.MultiDiGraph): The graph representing the train network. start_station (str): The name of the start station. end_station (str): The name of the end station. max_hops (int): The maximum number of hops allowed in the path. Returns: all_paths (list): A list of all possible paths between the start and end stations. Exceptions/Errors: None.","title":"find_all_paths(G, start_station, end_station, max_hops)"},{"location":"main/#index","text":"This function renders the index.html template, displaying a form for selecting the start and end stations. Parameters: None. Returns: render_template (flask.render_template): The rendered HTML template. Exceptions/Errors: None.","title":"index()"},{"location":"main/#search","text":"This function handles the form submission and performs the train search based on the user inputs. Parameters: None. Returns: render_template (flask.render_template): The rendered HTML template. Exceptions/Errors: None.","title":"search()"}]}